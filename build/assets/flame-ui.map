{"version":3,"sources":["vendor/ember-cli/app-prefix.js","flame-ui/app.js","flame-ui/components/app-container.js","flame-ui/components/app-version.js","flame-ui/components/flame-ui.js","flame-ui/components/input-toggle.js","flame-ui/components/sd-dropdown-item.js","flame-ui/components/sd-dropdown-trigger.js","flame-ui/components/sd-dropdown.js","flame-ui/components/sd-header.js","flame-ui/components/sd-panel-content.js","flame-ui/components/sd-panel-footer.js","flame-ui/components/sd-panel-header.js","flame-ui/components/sd-panel-sidebar.js","flame-ui/components/sd-panel.js","flame-ui/components/sd-tab-item.js","flame-ui/components/sd-table.js","flame-ui/components/sd-tabs-list.js","flame-ui/components/span-log.js","flame-ui/components/transactions-table.js","flame-ui/controllers/array.js","flame-ui/controllers/object.js","flame-ui/helpers/fmt-time-interval.js","flame-ui/helpers/fmtTimeInterval.js","flame-ui/helpers/is-equal.js","flame-ui/initializers/app-version.js","flame-ui/initializers/export-application-global.js","flame-ui/lib/flame-graph.js","flame-ui/mixins/clickElseWhere.js","flame-ui/router.js","flame-ui/routes/application.js","flame-ui/services/color-store.js","flame-ui/services/transaction-store.js","flame-ui/templates/application.js","flame-ui/templates/components/app-container.js","flame-ui/templates/components/flame-ui.js","flame-ui/templates/components/input-toggle.js","flame-ui/templates/components/s-panel-sidebar.js","flame-ui/templates/components/sd-dropdown-item.js","flame-ui/templates/components/sd-dropdown-trigger.js","flame-ui/templates/components/sd-dropdown.js","flame-ui/templates/components/sd-header.js","flame-ui/templates/components/sd-panel-content.js","flame-ui/templates/components/sd-panel-footer.js","flame-ui/templates/components/sd-panel-header.js","flame-ui/templates/components/sd-panel.js","flame-ui/templates/components/sd-tab-item.js","flame-ui/templates/components/sd-table.js","flame-ui/templates/components/sd-tabs-list.js","flame-ui/templates/components/span-log.js","flame-ui/templates/components/transactions-table.js","flame-ui/tests/app.jshint.js","flame-ui/tests/components/app-container.jshint.js","flame-ui/tests/components/flame-ui.jshint.js","flame-ui/tests/components/input-toggle.jshint.js","flame-ui/tests/components/sd-dropdown-item.jshint.js","flame-ui/tests/components/sd-dropdown-trigger.jshint.js","flame-ui/tests/components/sd-dropdown.jshint.js","flame-ui/tests/components/sd-header.jshint.js","flame-ui/tests/components/sd-panel-content.jshint.js","flame-ui/tests/components/sd-panel-footer.jshint.js","flame-ui/tests/components/sd-panel-header.jshint.js","flame-ui/tests/components/sd-panel-sidebar.jshint.js","flame-ui/tests/components/sd-panel.jshint.js","flame-ui/tests/components/sd-tab-item.jshint.js","flame-ui/tests/components/sd-table.jshint.js","flame-ui/tests/components/sd-tabs-list.jshint.js","flame-ui/tests/components/span-log.jshint.js","flame-ui/tests/components/transactions-table.jshint.js","flame-ui/tests/helpers/fmt-time-interval.jshint.js","flame-ui/tests/helpers/fmtTimeInterval.jshint.js","flame-ui/tests/helpers/is-equal.jshint.js","flame-ui/tests/helpers/resolver.js","flame-ui/tests/helpers/resolver.jshint.js","flame-ui/tests/helpers/start-app.js","flame-ui/tests/helpers/start-app.jshint.js","flame-ui/tests/integration/components/input-toggle-test.js","flame-ui/tests/integration/components/input-toggle-test.jshint.js","flame-ui/tests/integration/components/sd-dropdown-item-test.js","flame-ui/tests/integration/components/sd-dropdown-item-test.jshint.js","flame-ui/tests/integration/components/sd-dropdown-test.js","flame-ui/tests/integration/components/sd-dropdown-test.jshint.js","flame-ui/tests/integration/components/sd-dropdown-trigger-test.js","flame-ui/tests/integration/components/sd-dropdown-trigger-test.jshint.js","flame-ui/tests/integration/components/sd-header-test.js","flame-ui/tests/integration/components/sd-header-test.jshint.js","flame-ui/tests/integration/components/sd-panel-content-test.js","flame-ui/tests/integration/components/sd-panel-content-test.jshint.js","flame-ui/tests/integration/components/sd-panel-footer-test.js","flame-ui/tests/integration/components/sd-panel-footer-test.jshint.js","flame-ui/tests/integration/components/sd-panel-header-test.js","flame-ui/tests/integration/components/sd-panel-header-test.jshint.js","flame-ui/tests/integration/components/sd-panel-sidebar-test.js","flame-ui/tests/integration/components/sd-panel-sidebar-test.jshint.js","flame-ui/tests/integration/components/sd-panel-test.js","flame-ui/tests/integration/components/sd-panel-test.jshint.js","flame-ui/tests/integration/components/sd-tab-item-test.js","flame-ui/tests/integration/components/sd-tab-item-test.jshint.js","flame-ui/tests/integration/components/sd-table-test.js","flame-ui/tests/integration/components/sd-table-test.jshint.js","flame-ui/tests/integration/components/sd-tabs-list-test.js","flame-ui/tests/integration/components/sd-tabs-list-test.jshint.js","flame-ui/tests/lib/flame-graph.jshint.js","flame-ui/tests/mixins/clickElseWhere.jshint.js","flame-ui/tests/router.jshint.js","flame-ui/tests/routes/application.jshint.js","flame-ui/tests/services/color-store.jshint.js","flame-ui/tests/services/transaction-store.jshint.js","flame-ui/tests/test-helper.js","flame-ui/tests/test-helper.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('flame-ui/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'flame-ui/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  /* global d3 */\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  //\n  // Patch d3.entries to include only own property and avoid extra properties added by Ember prototypes.\n  //\n  d3.entries = function (map) {\n    var entries = [];\n    for (var key in map) {\n      if (map.hasOwnProperty(key)) {\n        entries.push({ key: key, value: map[key] });\n      }\n    }\n    return entries;\n  };\n\n  exports['default'] = App;\n\n});","define('flame-ui/components/app-container', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var get = Ember['default'].get;\n    var set = Ember['default'].set;\n    var setProperties = Ember['default'].setProperties;\n\n    exports['default'] = Ember['default'].Component.extend({\n        transactionStore: Ember['default'].inject.service(),\n\n        classNames: ['sd-app-container'],\n\n        init: function init() {\n            this._super.apply(this, arguments);\n\n            setProperties(this, {\n                transaction: null,\n                aggregation: null,\n                transactionData: null,\n                span: null,\n                spanMode: null,\n                spanLog: null\n            });\n        },\n\n        didInitAttrs: function didInitAttrs() {\n            this.selectTransaction(this.get('transactions')[0].node);\n        },\n\n        chartPanelSize: Ember['default'].computed('span', function () {\n            return this.get('span') ? 'row-2' : 'row-3';\n        }),\n\n        selectTransaction: function selectTransaction(transaction, aggregation) {\n            var me = this;\n            var currentAggregation = aggregation || get(me, 'aggregation') || 'avg';\n\n            if (get(me, 'transaction') !== transaction || get(me, 'aggregation') !== currentAggregation) {\n                setProperties(me, {\n                    transaction: transaction,\n                    aggregation: currentAggregation,\n                    span: null\n                });\n\n                me.get('transactionStore').findTransaction(transaction, currentAggregation).then(function (result) {\n                    setProperties(me, {\n                        transaction: transaction,\n                        aggregation: currentAggregation,\n                        transactionData: result\n                    });\n                });\n            } else {\n                setProperties(me, {\n                    transaction: null,\n                    transactionData: null,\n                    span: null\n                });\n            }\n        },\n\n        actions: {\n            selectTransaction: function selectTransaction(transaction, aggregation) {\n                this.selectTransaction(transaction, aggregation);\n            },\n\n            changeAggregation: function changeAggregation(aggregation) {\n                var me = this;\n                var transaction = this.get('transaction');\n\n                me.get('transactionStore').findTransaction(transaction, aggregation).then(function (result) {\n                    setProperties(me, {\n                        transaction: transaction,\n                        aggregation: aggregation,\n                        transactionData: result\n                    });\n                });\n            },\n\n            selectSpan: function selectSpan(span) {\n                var me = this;\n                var currentMode = get(this, 'spanMode') || 'SPAN';\n\n                if (get(me, 'span') !== span) {\n                    setProperties(me, {\n                        span: span,\n                        spanMode: currentMode\n                    });\n\n                    get(me, 'transactionStore').findSpanLog(span, currentMode).then(function (result) {\n                        setProperties(me, {\n                            span: span,\n                            spanMode: currentMode,\n                            spanLog: result\n                        });\n                    });\n                } else {\n                    setProperties(me, {\n                        span: null,\n                        spanMode: null,\n                        spanLog: null\n                    });\n                }\n            },\n\n            selectSpanMode: function selectSpanMode(mode) {\n                var me = this;\n                var currentSpan = get(this, 'span');\n\n                set(this, 'spanMode', mode);\n\n                get(me, 'transactionStore').findSpanLog(currentSpan, mode).then(function (result) {\n                    setProperties(me, {\n                        span: currentSpan,\n                        spanMode: mode,\n                        spanLog: result\n                    });\n                });\n            }\n        }\n    });\n\n});","define('flame-ui/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'flame-ui/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('flame-ui/components/flame-ui', ['exports', 'ember', 'flame-ui/components/sd-panel', 'flame-ui/helpers/fmt-time-interval', 'flame-ui/lib/flame-graph'], function (exports, Ember, SDPanel, fmtTimeInterval, FlameGraph) {\n\n    'use strict';\n\n    /* global d3 */\n\n    var get = Ember['default'].get;\n    var set = Ember['default'].set;\n    var setProperties = Ember['default'].setProperties;\n\n    exports['default'] = SDPanel['default'].extend({\n        colorStore: Ember['default'].inject.service('color-store'),\n\n        classNames: ['flame-ui'],\n\n        aggregationOptions: Ember['default'].A([{\n            value: 'avg',\n            name: 'Average'\n        }, {\n            value: 'min',\n            name: 'Minimum'\n        }, {\n            value: 'max',\n            name: 'Maximum'\n        }]),\n\n        init: function init() {\n            this._super();\n\n            var me = this;\n            setProperties(me, {\n                activeSpan: null,\n                chart: null,\n                detailMode: 'popout',\n                chartContext: {\n                    detailClose: function detailClose() {\n                        var svPopoutBox = d3.select('#' + me.$().attr('id') + ' #svPopout');\n                        if (get(me, 'detailMode') !== 'zoom') {\n                            svPopoutBox.html('');\n                            svPopoutBox.style('opacity', null);\n                            svPopoutBox.style('z-index', null);\n                        } else {\n                            get(me, 'chart').zoomSet({ 'x': 0, 'dx': 1, 'y': 0 });\n                        }\n                    },\n                    detailOpen: function svDetailOpen(d) {\n                        function svMakeSubgraphData(d) {\n                            /*\n                             * First, construct everything from the current node to all of its\n                             * leafs.\n                             */\n                            var tree, oldtree;\n\n                            tree = {};\n                            tree[d.data.key] = d.data.value;\n\n                            while (d.parent !== undefined) {\n                                oldtree = tree;\n                                tree = {};\n                                tree[d.parent.data.key] = {\n                                    't': d.parent.data.value.t,\n                                    'svTotal': d.parent.data.value.svTotal,\n                                    'ch': oldtree\n                                };\n                                d = d.parent;\n                            }\n\n                            return tree;\n                        }\n\n                        var svPopoutBox = d3.select('#' + me.$().attr('id') + ' #svPopout');\n                        if (get(me, 'detailMode') !== 'zoom') {\n                            svPopoutBox.html('');\n                            new FlameGraph['default'](svPopoutBox, svMakeSubgraphData(d), null, null, get(me, 'chartContext'), {\n                                getNodeColor: me.getNodeColor.bind(me)\n                            });\n                            svPopoutBox.style('z-index', 1);\n                            svPopoutBox.style('opacity', 1);\n                        } else {\n                            get(me, 'chart').zoomSet(d);\n                        }\n                    },\n                    mouseout: function mouseout() {\n                        Ember['default'].run(function () {\n                            set(me, 'activeSpan', null);\n                        });\n                    },\n                    mouseover: function mouseover(d, det) {\n                        Ember['default'].run(function () {\n                            set(me, 'activeSpan', {\n                                name: det.label,\n                                container: d.data.value.cont,\n                                commandLine: d.data.value.exe,\n                                timeTotal: fmtTimeInterval['default'](d.data.value.tt, 3, 1).output,\n                                timeInNode: fmtTimeInterval['default'](d.data.value.t, 3, 1).output,\n                                childCount: d.data.value.nconc\n                            });\n                        });\n                    },\n                    select: function select(d) {\n                        Ember['default'].run(function () {\n                            me.sendAction('select', d);\n                        });\n                    }\n                }\n            });\n        },\n\n        didInsertElement: function didInsertElement() {\n            if (this.attrs.data.value) {\n                this.renderChart(this.attrs.data.value, this.attrs.node.value);\n            }\n        },\n\n        didUpdateAttrs: function didUpdateAttrs(args) {\n            set(this, 'activeSpan', null);\n\n            if (args.newAttrs.data.value !== args.oldAttrs.data.value) {\n                this.destroyChart();\n                if (args.newAttrs.data.value) {\n                    this.renderChart(args.newAttrs.data.value, args.newAttrs.node.value);\n                }\n            }\n        },\n\n        renderChart: function renderChart(data) {\n            set(this, 'chart', new FlameGraph['default'](d3.select('#' + this.$().attr('id') + ' #chart'), data, null, null, get(this, 'chartContext'), {\n                axisLabels: true,\n                getNodeColor: this.getNodeColor.bind(this)\n            }));\n        },\n\n        destroyChart: function destroyChart() {\n            d3.select('#' + this.$().attr('id') + ' #chart').html(\"\");\n        },\n\n        getNodeColor: function getNodeColor(containerName) {\n            return get(this, 'colorStore').assignColor(containerName);\n        },\n\n        containerNameList: Ember['default'].computed('data', function () {\n            function recursion(ch) {\n                var keys = Object.keys(ch);\n                var i, iz;\n                for (i = 0, iz = keys.length; i < iz; i++) {\n                    if (ch[keys[i]].cont && map[ch[keys[i]].cont] === undefined) {\n                        map[ch[keys[i]].cont] = true;\n                        list.push(ch[keys[i]].cont);\n                    }\n\n                    if (ch[keys[i]].cont && ch[keys[i]].ch) {\n                        recursion(ch[keys[i]].ch);\n                    }\n                }\n            }\n\n            var list = [];\n            var map = {};\n\n            if (this.attrs.data.value) {\n                recursion(this.attrs.data.value[''].ch);\n            }\n\n            return list;\n        }),\n\n        legendItems: Ember['default'].computed('containerNameList', function () {\n            return get(this, 'containerNameList').map(function (containerName) {\n                return {\n                    name: containerName,\n                    color: new Ember['default'].Handlebars.SafeString('color: ' + get(this, 'colorStore').assignColor(containerName))\n                };\n            }, this);\n        }),\n\n        actions: {\n            changeAggregation: function changeAggregation(value) {\n                this.sendAction('changeAggregation', value);\n            }\n        }\n    });\n\n});","define('flame-ui/components/input-toggle', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'label',\n        classNames: ['input-toggle'],\n        input: Ember['default'].$(),\n\n        didInsertElement: function didInsertElement() {\n            this.set('input', this.$('input'));\n        },\n\n        actions: {\n            toggle: function toggle() {\n                var $input = this.get('input');\n\n                if ($input.is(':disabled')) {\n                    return;\n                }\n                this.toggleProperty('checked');\n                $input.trigger('change');\n                //\n                // Need this run next or the action is triggered too early\n                //\n                Ember['default'].run.next(this, function () {\n                    this.sendAction('onChange', this.get('checked'));\n                });\n            }\n        }\n    });\n\n});","define('flame-ui/components/sd-dropdown-item', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'li',\n        classNameBindings: ['item.hidden:-hidden'],\n\n        selectedOption: null,\n        isSelected: Ember['default'].computed('selectedOption', function () {\n            return this.get('selectedOption') === this.get('item.value');\n        }),\n\n        actions: {\n            selectOption: function selectOption(value) {\n                this.sendAction('selectOption', value);\n            },\n            setDropdownStatus: function setDropdownStatus(status) {\n                this.sendAction('setDropdownStatus', status);\n            }\n        }\n    });\n\n});","define('flame-ui/components/sd-dropdown-trigger', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'button',\n\n        click: function click() {\n            this.send('toggleDropdown');\n        },\n\n        actions: {\n            toggleDropdown: function toggleDropdown() {\n                this.sendAction('toggleDropdown');\n            }\n        }\n    });\n\n});","define('flame-ui/components/sd-dropdown', ['exports', 'ember', 'flame-ui/mixins/clickElseWhere'], function (exports, Ember, ClickElseWhereMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend(ClickElseWhereMixin['default'], {\n        classNames: ['sd-dropdown-wrapper'],\n        classNameBindings: ['isDropdownOpen:-open'],\n\n        items: Ember['default'].A(),\n        isDropdownOpen: false,\n        selectedOption: null,\n\n        label: 'Dropdown',\n\n        action: 'select',\n\n        onClickElsewhere: function onClickElsewhere(evt) {\n            var el = Ember['default'].$(evt.target);\n\n            // Exit if the target element is not in the DOM anymore\n            // it means that the clicked element was the \"Edit\" button of the smartTextbox\n            if (Ember['default'].$(document).find(el).length === 0) return;\n\n            // Check if the clicked element is inside the current smartTextbox, if not, close the edit mode\n            if (this.$() && this.$().has(el).length === 0) {\n                this.send('setDropdownStatus', false);\n            }\n        },\n\n        actions: {\n            // inverts the current status\n            toggleDropdown: function toggleDropdown() {\n                this.toggleProperty('isDropdownOpen');\n            },\n            // false = close, true = open\n            setDropdownStatus: function setDropdownStatus(status) {\n                this.set('isDropdownOpen', status);\n            },\n            // triggered when an option is selected\n            selectOption: function selectOption(value) {\n                // send a custom action to the parent, passing the value of the selected option as parameter\n                this.sendAction(this.get('action'), value);\n                // highlight current option\n                this.set('selectedOption', value);\n                // close the dropdown\n                this.send('setDropdownStatus', false);\n            }\n        }\n    });\n\n});","define('flame-ui/components/sd-header', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'header',\n        classNames: ['sd-header']\n    });\n\n});","define('flame-ui/components/sd-panel-content', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-panel-content']\n    });\n\n});","define('flame-ui/components/sd-panel-footer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-panel-footer']\n    });\n\n});","define('flame-ui/components/sd-panel-header', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-panel-header']\n    });\n\n});","define('flame-ui/components/sd-panel-sidebar', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-panel-sidebar'],\n        classNameBindings: ['collapsed:-collapsed']\n    });\n\n});","define('flame-ui/components/sd-panel', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    // sd-panel, `sd` stands for Sysdig, it's the basic panel component used in our app\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-panel']\n    });\n\n});","define('flame-ui/components/sd-tab-item', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'li',\n        classNames: ['sd-tab-item'],\n        classNameBindings: ['isActive:-active'],\n\n        // Here we store the value of the tab (it works like an HTML select widget)\n        value: null,\n\n        // Register this tab as part of the parent tabs-list, doing so we'll know how many tabs have our list\n        // and we can set the first tab as the default activated\n        setup: Ember['default'].on('didInsertElement', function () {\n            this.send('registerTab');\n        }),\n\n        // Use this property to know if the current tab is the active one\n        isActive: Ember['default'].computed('activeTab', function () {\n            return this.get('activeTab') === this.get('value');\n        }),\n\n        // Clicking on this tab will activate it\n        click: function click() {\n            this.send('activateTab');\n        },\n\n        actions: {\n            registerTab: function registerTab() {\n                this.sendAction('registerTab', this.get('value'));\n            },\n            activateTab: function activateTab() {\n                this.sendAction('activateTab', this.get('value'));\n            }\n        }\n    });\n\n});","define('flame-ui/components/sd-table', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['sd-table', 'table-container'],\n        attributeBindings: ['eqPts:data-eq-pts'],\n\n        // Set sticky to true when your table needs a sticky_on_top header\n        // remember to wrap your `th` content inside a `div.th-inner` and make sure the table is direct child of a flexbox\n        sticky: false,\n        hasStickHeader: Ember['default'].computed.oneWay('sticky'),\n\n        // We apply this dummy property just to enable eq.js on this component and take advantage of the `eqResize` event\n        eqPts: 'x:0',\n\n        setupThead: Ember['default'].on('didInsertElement', function () {\n            this.updateThead(this.$('.thead'));\n            this.$().on('eqResize', (function () {\n                this.updateThead(this.$('.thead'));\n            }).bind(this));\n        }),\n        updateThead: function updateThead($thead) {\n            $thead.find('th').each((function (index, th) {\n                var $th = this.$(th);\n                var thInner = $th.find('.th-inner')[0];\n                var width = $th.width();\n                var paddingLeft = thInner ? window.getComputedStyle(thInner).getPropertyValue('padding-left').slice(0, -2) : 0;\n                var paddingRight = thInner ? window.getComputedStyle(thInner).getPropertyValue('padding-right').slice(0, -2) : 0;\n                $th.find('.th-inner').width(width - paddingLeft - paddingRight); // TODO: get rid of the `- 20`\n            }).bind(this));\n        }\n    });\n\n});","define('flame-ui/components/sd-tabs-list', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'ul',\n        classNames: ['sd-tabs-list'],\n\n        // This is the list of tabs' IDs contained in this tabs-list\n        // everytime a new tabs-list is initialized, we set it as empty array\n        tabs: null,\n        init: function init() {\n            this._super();\n            this.set('tabs', Ember['default'].A([]));\n        },\n\n        // By default, set as active tab the first one\n        // this prop will then be overrided when a different one is activated\n        activeTab: Ember['default'].computed('tabs.[]', function () {\n            return this.get('tabs.0');\n        }),\n\n        actions: {\n            registerTab: function registerTab(tab) {\n                this.get('tabs').pushObject(tab);\n            },\n            activateTab: function activateTab(tab) {\n                this.set('activeTab', tab);\n            }\n        }\n    });\n\n});","define('flame-ui/components/span-log', ['exports', 'ember', 'flame-ui/components/sd-panel'], function (exports, Ember, SDPanel) {\n\n    'use strict';\n\n    exports['default'] = SDPanel['default'].extend({\n        classNames: ['span-log'],\n\n        lines: Ember['default'].computed('log', function () {\n            var log = this.get('log');\n            if (!log) return;\n            return this.get('log').map(function (line) {\n                return Ember['default'].$.extend(line, {\n                    color: new Ember['default'].Handlebars.SafeString('color: ' + line.col),\n                    lineColor: new Ember['default'].Handlebars.SafeString('color: ' + line.contCol)\n                });\n            });\n        }),\n\n        actions: {\n            selectMode: function selectMode(mode) {\n                this.sendAction('selectMode', mode);\n            }\n        }\n    });\n\n});","define('flame-ui/components/transactions-table', ['exports', 'flame-ui/components/sd-panel'], function (exports, SPanel) {\n\n    'use strict';\n\n    exports['default'] = SPanel['default'].extend({\n        classNames: ['transactions-table'],\n\n        actions: {\n            select: function select(node, view) {\n                this.sendAction('select', node, view);\n            }\n        }\n    });\n\n});","define('flame-ui/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('flame-ui/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('flame-ui/helpers/fmt-time-interval', ['exports'], function (exports) {\n\n    'use strict';\n\n    //\n    // convert a nanosecond time interval into a s.ns representation.\n    // 1100000000 becomes 1.1s\n    //\n    exports['default'] = function (value, decimals, step) {\n        decimals = decimals === undefined ? 2 : decimals;\n        step = step === undefined ? 2 : step;\n\n        var units = ['ns', 'us', 'ms', 's', 'min', 'h', 'd'];\n        var absValue = Math.abs(value);\n        var multipliers = [1000, 1000, 1000, 60, 60, 24];\n        var multiplier = 1;\n        var i;\n        for (i = 0; i < units.length; i++) {\n            if (absValue < multiplier * step * multipliers[i]) {\n                break;\n            } else if (i < units.length - 1) {\n                multiplier = multiplier * multipliers[i];\n            }\n        }\n        i = i < units.length ? i : units.length - 1;\n\n        var convertedValue = (value / multiplier).toFixed(decimals);\n        var unit = units[i];\n\n        return {\n            value: convertedValue,\n            unit: unit,\n            output: convertedValue + ' ' + unit\n        };\n    }\n\n});","define('flame-ui/helpers/fmtTimeInterval', ['exports'], function (exports) {\n\n    'use strict';\n\n    //\n    // convert a nanosecond time interval into a s.ns representation.\n    // 1100000000 becomes 1.1s\n    //\n    exports['default'] = function (value, decimals, step) {\n        decimals = decimals === undefined ? 2 : decimals;\n        step = step === undefined ? 2 : step;\n\n        var units = ['ns', 'us', 'ms', 's', 'min', 'h', 'd'];\n        var absValue = Math.abs(value);\n        var multipliers = [1000, 1000, 1000, 60, 60, 24];\n        var multiplier = 1;\n        var i;\n        for (i = 0; i < units.length; i++) {\n            if (absValue < multiplier * step * multipliers[i]) {\n                break;\n            } else if (i < units.length - 1) {\n                multiplier = multiplier * multipliers[i];\n            }\n        }\n        i = i < units.length ? i : units.length - 1;\n\n        var convertedValue = (value / multiplier).toFixed(decimals);\n        var unit = units[i];\n\n        return {\n            value: convertedValue,\n            unit: unit,\n            output: convertedValue + ' ' + unit\n        };\n    }\n\n});","define('flame-ui/helpers/is-equal', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Helper.extend({\n    compute: function compute(params, hash) {\n      return hash.a === hash.b;\n    }\n  });\n\n});","define('flame-ui/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'flame-ui/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('flame-ui/initializers/export-application-global', ['exports', 'ember', 'flame-ui/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('flame-ui/lib/flame-graph', ['exports'], function (exports) {\n\n    'use strict';\n\n    /* global d3 */\n\n    /*\n     * Input: \"d\", a D3 node from the layout, typically resembling:\n     *     parent: ...,  // parent D3 node\n     *     data: {\n     *         key: ..., // function name\n     *         value: {\n     *             svTotal: ...,\n     *             t: ...,\n     *             ch: ...\n     *         }\n     *     }\n     * Output: an object describing the raw flame graph data, matching the form:\n     *     \"\": {\n     *         svTotal: ...\n     *         t: ...\n     *         ch: {\n     *             key1: { // function name\n     *                 svTotal: ...\n     *                 t: ...\n     *                 ch: ...\n     *             },\n     *             ...\n     *         }\n     *     }\n     */\n\n    /* Configuration */\n    // var svSvgWidth = null;      /* image width (null to auto-compute) */\n    // var svSvgHeight = null;     /* image height (null to auto-compute) */\n    var svAxisLabelWidth = 45; /* width of axis labels */\n    // var svChartWidth = null;    /* width of chart part of image */\n    // var svChartHeight = null;   /* height of chart part of image */\n    var svGrowDown = false; /* if true, stacks are drawn growing down */\n    var svTransitionTime = 2000; /* time for transition */\n    var svCornerPixels = 2; /* radius of rounded corners */\n    var svTextPaddingLeft = 5; /* padding-left on rectangle labels */\n    var svTextPaddingRight = 10; /* pading-right on rectangle labels */\n    var svTextPaddingTop = '1.0em'; /* padding-top on rectangle labels */\n    var svColorMode = 'mono'; /* coloring mode */\n    // var svDetailMode = 'popout';    /* detail display mode (\"zoom\" or \"popout\") */\n\n    /*\n     * Build a flame graph rooted at the given \"node\" (a D3 selection) with the\n     * given \"rawdata\" tree.  The graph will have size defined by \"pwidth\" and\n     * \"pheight\".  \"context\" is used for notifications about UI actions.\n     */\n    function FlameGraph(node, rawdata, pwidth, pheight, context, options) {\n        function svCreateBarLabel(d) {\n            var nconc = d.data.value.nconc;\n\n            if (nconc) {\n                return d.data.key + ' (' + nconc + ')';\n            } else {\n                return d.data.key;\n            }\n        }\n\n        var axiswidth, chartheight, rect, scale, nodeid, axis, data;\n        var fg = this;\n\n        this.fg_context = context;\n        this.fg_maxdepth = 0;\n        this.fg_maxunique = 0;\n        this.fg_depthsamples = [];\n        this.computeDepth(rawdata, 0);\n\n        options.coloring = options.coloring || svColorMode;\n        if (options.hasOwnProperty('growDown') === false) {\n            options.growDown = svGrowDown;\n        }\n\n        if (options.axisLabels) {\n            axiswidth = this.fg_axiswidth = svAxisLabelWidth;\n        } else {\n            axiswidth = this.fg_axiswidth = 0;\n        }\n\n        this.fg_svgwidth = pwidth !== null ? pwidth : parseInt(node.style('width'), 10);\n        this.fg_svgheight = pheight !== null ? pheight : 25 * this.fg_maxdepth;\n        this.fg_chartwidth = this.fg_svgwidth - axiswidth;\n        chartheight = this.fg_chartheight = this.fg_svgheight - axiswidth;\n\n        this.fg_xscale = d3.scale.linear().range([0, this.fg_chartwidth]);\n        this.fg_yscale = d3.scale.linear().range([0, this.fg_chartheight]);\n\n        this.fg_svg = node.append('svg:svg');\n        this.fg_svg.attr('width', this.fg_svgwidth);\n        this.fg_svg.attr('height', this.fg_svgheight);\n\n        /* Create a background rectangle that resets the view when clicked. */\n        rect = this.fg_svg.append('svg:rect');\n        rect.attr('class', 'svBackground');\n        rect.attr('width', this.fg_svgwidth);\n        rect.attr('height', this.fg_svgheight);\n        rect.attr('fill', '#ffffff');\n        rect.on('click', this.detailClose.bind(this));\n        rect.on('dblclick', this.detailClose.bind(this));\n\n        /* Configure the partition layout. */\n        this.fg_part = d3.layout.partition();\n        this.fg_part.children(function (d) {\n            return d3.entries(d.value.ch);\n        });\n        this.fg_part.value(function (d) {\n            return d.value.svTotal;\n        });\n        this.fg_part.sort(function (d1, d2) {\n            return d1.data.key.localeCompare(d2.data.key);\n        });\n\n        /* Configure the color function. */\n        if (options.coloring === 'random') {\n            scale = d3.scale.category20c();\n            this.fg_color = function (d) {\n                return scale(d.data.key);\n            };\n        } else {\n            this.fg_color = function (d) {\n                if (d.data.value.svSynthetic) {\n                    return '#ffffff';\n                }\n\n                return options.getNodeColor(d.data.value.cont);\n            };\n        }\n\n        /* Configure the actual D3 components. */\n        nodeid = this.fg_nodeid = function (d) {\n            return encodeURIComponent([d.data.key, fg.fg_yscale(d.y), fg.fg_xscale(d.x)].join('@'));\n        };\n        this.fg_rectwidth = function (d) {\n            return fg.fg_xscale(d.dx);\n        };\n        this.fg_height = function (d) {\n            return fg.fg_yscale(d.dy);\n        };\n        this.fg_textwidth = function (d) {\n            return Math.max(0, fg.fg_rectwidth(d) - svTextPaddingRight);\n        };\n        this.fg_x = function (d) {\n            return fg.fg_xscale(d.x) + fg.fg_axiswidth;\n        };\n\n        if (options.growDown) {\n            this.fg_y = function (d) {\n                return fg.fg_yscale(d.y);\n            };\n        } else {\n            this.fg_y = function (d) {\n                return chartheight - fg.fg_yscale(d.y);\n            };\n        }\n\n        data = this.fg_part(d3.entries(rawdata)[0]);\n        this.fg_rects = this.fg_svg.selectAll('rect').data(data).enter().append('svg:rect').attr('class', function (d) {\n            return d.data.value.svSynthetic ? 'svBoxSynthetic' : 'svBox';\n        }).attr('x', this.fg_x).attr('y', this.fg_y).attr('rx', svCornerPixels).attr('ry', svCornerPixels).attr('height', this.fg_height).attr('width', this.fg_rectwidth).attr('fill', this.fg_color).on('click', context.select.bind(this)).on('dblclick', this.detailOpen.bind(this)).on('mouseover', this.mouseover.bind(this)).on('mouseout', this.mouseout.bind(this));\n        this.fg_clips = this.fg_svg.selectAll('clipPath').data(data).enter().append('svg:clipPath').attr('id', nodeid).append('svg:rect').attr('x', this.fg_x).attr('y', this.fg_y).attr('width', this.fg_textwidth).attr('height', this.fg_height);\n        this.fg_text = this.fg_svg.selectAll('text').data(data).enter().append('text').attr('class', 'svBoxLabel').attr('x', this.fg_x).attr('y', this.fg_y).attr('dx', svTextPaddingLeft).attr('dy', svTextPaddingTop). // 12\n        attr('clip-path', function (d) {\n            return 'url(\"#' + nodeid(d) + '\")';\n        }).on('click', context.select.bind(this)).on('dblclick', this.detailOpen.bind(this)).on('mouseover', this.mouseover.bind(this)).on('mouseout', this.mouseout.bind(this)).text(function (d) {\n            return svCreateBarLabel(d);\n        });\n\n        if (options.axisLabels) {\n            axis = this.fg_svg.append('text');\n            axis.attr('class', 'svYAxisLabel');\n            axis.attr('x', -this.fg_svgheight);\n            axis.attr('dx', '8em');\n            axis.attr('y', '30px');\n            axis.attr('transform', 'rotate(-90)');\n            axis.text('Tiers');\n\n            axis = this.fg_svg.append('text');\n            axis.attr('class', 'svYAxisLabel');\n            axis.attr('x', '30px');\n            axis.attr('dx', '8em');\n            /*\n             * Magic constants here:\n             *   30 is the height of the label (since we're specifying the\n             *   top coordinate), and 25 is the height of each block\n             *   (because there's an invisible row we want to cover up).\n             */\n            axis.attr('y', this.fg_svgheight - 30 - 25);\n            axis.attr('width', this.fg_svgwidth - 30);\n            //      axis.text('Percentage of Samples');\n        }\n    }\n\n    FlameGraph.prototype.computeDepth = function (tree, depth) {\n        var key, rem;\n\n        if (depth > this.fg_maxdepth) {\n            this.fg_maxdepth = depth;\n        }\n\n        if (depth >= this.fg_depthsamples.length) {\n            this.fg_depthsamples[depth] = 0;\n        }\n\n        for (key in tree) {\n            if (tree[key].t > this.fg_maxunique) {\n                this.fg_maxunique = tree[key].t;\n            }\n            this.fg_depthsamples[depth] += tree[key].svTotal;\n            this.computeDepth(tree[key].ch, depth + 1);\n\n            rem = tree[key].t;\n            if (rem > 0 && tree[key].ch[''] === undefined) {\n                tree[key].ch[''] = {\n                    'svSynthetic': true,\n                    't': rem,\n                    'svTotal': rem,\n                    'ch': {}\n                };\n            }\n        }\n    };\n\n    FlameGraph.prototype.detailClose = function () {\n        if (this.fg_context !== null) {\n            this.fg_context.detailClose();\n        }\n    };\n\n    FlameGraph.prototype.detailOpen = function (d) {\n        if (!d.data.value.svSynthetic && this.fg_context !== null) {\n            this.fg_context.detailOpen(d);\n        }\n    };\n\n    FlameGraph.prototype.mouseover = function (d) {\n        if (d.data.value.svSynthetic || this.fg_context === null) {\n            return;\n        }\n\n        var nsamples, nunique;\n        var pctSamples, pctUnique;\n        var detail;\n        var fg = this;\n\n        nsamples = d.data.value.svTotal;\n        pctSamples = (100 * nsamples / this.fg_depthsamples[0]).toFixed(1);\n\n        nunique = d.data.value.t;\n        pctUnique = (100 * nunique / this.fg_depthsamples[0]).toFixed(1);\n\n        detail = {\n            'label': d.data.key,\n            'nsamples': d.data.value.svTotal,\n            'nunique': d.data.value.t,\n            'nallsamples': this.fg_depthsamples[0],\n            'pctSamples': pctSamples,\n            'pctUnique': pctUnique,\n            'x': d3.event.pageX,\n            'y': d3.event.pageY\n        };\n\n        this.fg_hoverto = setTimeout(function () {\n            fg.fg_hoverto = null;\n            fg.fg_context.mouseover(d, detail);\n        }, 50);\n    };\n\n    FlameGraph.prototype.mouseout = function (d) {\n        if (this.fg_hoverto) {\n            clearTimeout(this.fg_hoverto);\n        }\n        if (this.fg_context !== null) {\n            this.fg_context.mouseout(d);\n        }\n    };\n\n    FlameGraph.prototype.zoomSet = function (cd) {\n        var fg = this;\n\n        this.fg_xscale.domain([cd.x, cd.x + cd.dx]);\n        this.fg_rectwidth = function (d) {\n            return fg.fg_xscale(d.x + d.dx) - fg.fg_xscale(d.x);\n        };\n        this.fg_textwidth = function (d) {\n            return Math.max(0, fg.fg_xscale(d.x + d.dx) - fg.fg_xscale(d.x) - svTextPaddingRight);\n        };\n        this.fg_rects.transition().duration(svTransitionTime).attr('x', this.fg_x).attr('width', this.fg_rectwidth);\n        this.fg_clips.transition().duration(svTransitionTime).attr('x', this.fg_x).attr('width', this.fg_textwidth);\n        this.fg_text.transition().duration(svTransitionTime).attr('x', this.fg_x);\n    };\n\n    exports['default'] = FlameGraph;\n\n});","define('flame-ui/mixins/clickElseWhere', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        // By default, automatically initialize the event\n        autoInitClickElsewhere: true,\n\n        // Your custom function\n        onClickElsewhere: Ember['default'].K,\n\n        onClickElsewhereBound: null,\n\n        // Set an event that will be fired when user clicks outside of the component/view\n        setupClickElsewhereListener: function setupClickElsewhereListener() {\n            this.set('onClickElsewhereBound', this.get('onClickElsewhere').bind(this));\n            Ember['default'].$(document).on('mouseup', this.get('onClickElsewhereBound'));\n            //Ember.$(document).on('mouseup', function() { console.log('a'); });\n        },\n\n        // Clean the previously defined event to keep events stack clean\n        removeClickElsewhereListener: function removeClickElsewhereListener() {\n            Ember['default'].$(document).off('moseup', this.get('onClickElsewhereBound'));\n\n            // We can set the prop to null only if the object still exists\n            if (this.isDetroyed || this.isDestroying) return;\n            this.set('onClickElsewhereBound', null);\n        },\n\n        // Setup listener on didInsertElement\n        setupClickElsewhereListenerOnLoad: Ember['default'].on('didInsertElement', function () {\n            this.notifyPropertyChange('isClickElsewhereEnabled');\n            if (this.get('autoInitClickElsewhere') === false) return;\n            this.setupClickElsewhereListener();\n        }),\n\n        // Remove listener on willDestroyElement\n        removeClickElsewhereListenerOnDestroy: Ember['default'].on('willDestroyElement', function () {\n            if (this.get('autoInitClickElsewhere') === false) return;\n            this.removeClickElsewhereListener();\n        })\n    });\n\n});","define('flame-ui/router', ['exports', 'ember', 'flame-ui/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {});\n\n    exports['default'] = Router;\n\n});","define('flame-ui/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        transactionStore: Ember['default'].inject.service(),\n\n        model: function model() {\n            return this.get('transactionStore').findAll();\n        }\n    });\n\n});","define('flame-ui/services/color-store', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /* global d3 */\n\n    exports['default'] = Ember['default'].Service.extend({\n        init: function init() {\n            this._super.apply(this, arguments);\n\n            this.setProperties({\n                colors: d3.scale.category10(),\n                lastColorIndex: 0,\n                containerNames: {},\n                containerNameList: []\n            });\n        },\n\n        assignColor: function assignColor(containerName) {\n            var containerNames = this.get('containerNames');\n            var color = containerNames[containerName];\n            if (color === undefined) {\n                color = this.get('colors')(this.get('lastColorIndex'));\n                containerNames[containerName] = color;\n                this.get('containerNameList').pushObject(containerName);\n                this.incrementProperty('lastColorIndex');\n            }\n\n            return color;\n        }\n    });\n\n});","define('flame-ui/services/transaction-store', ['exports', 'ember', 'flame-ui/helpers/fmtTimeInterval'], function (exports, Ember, fmtTimeInterval) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Service.extend({\n        colorStore: Ember['default'].inject.service('color-store'),\n\n        findAll: function findAll() {\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                Ember['default'].run.next(function () {\n                    var data = {\n                        avg: svFillData(window.transitions.avg),\n                        min: svFillData(window.transitions.min),\n                        max: svFillData(window.transitions.max)\n                    };\n                    var nodeIds = Object.keys(data.avg[''].ch);\n\n                    var transactions = nodeIds.map(function (node) {\n                        return {\n                            node: node,\n                            n: data.avg[\"\"].ch[node].n,\n                            avg: fmtTimeInterval['default'](data.avg[\"\"].ch[node].tt, 3, 1).output,\n                            min: fmtTimeInterval['default'](data.min[\"\"].ch[node].tt, 3, 1).output,\n                            max: fmtTimeInterval['default'](data.max[\"\"].ch[node].tt, 3, 1).output\n                        };\n                    });\n\n                    resolve(transactions);\n                });\n            });\n        },\n\n        findTransaction: function findTransaction(transaction, aggregation) {\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                Ember['default'].run.next(function () {\n                    var data;\n                    switch (aggregation) {\n                        case 'avg':\n                            data = svFillData(window.transitions.avg);\n                            break;\n                        case 'min':\n                            data = svFillData(window.transitions.min);\n                            break;\n                        case 'max':\n                            data = svFillData(window.transitions.max);\n                            break;\n                    }\n\n                    resolve(createSubTree(data, transaction));\n                });\n            });\n        },\n\n        findSpanLog: function findSpanLog(span, spanMode) {\n            var colorStore = this.get('colorStore');\n\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                Ember['default'].run.next(function () {\n                    function svAddChildLogs(loglist, dk, dv, retnow) {\n                        if (dv.logs !== undefined) {\n                            for (var j = 0; j < dv.logs.length; j++) {\n                                dv.logs[j].k = dk;\n                                dv.logs[j].d = dv;\n                            }\n\n                            Array.prototype.push.apply(loglist, dv.logs);\n                        }\n\n                        if (retnow === true) {\n                            return;\n                        }\n\n                        var childs = dv.ch;\n                        for (var ch in childs) {\n                            svAddChildLogs(loglist, ch, childs[ch]);\n                        }\n                    }\n\n                    var loglist = [];\n\n                    if (spanMode === 'SPAN') {\n                        svAddChildLogs(loglist, span.data.key, span.data.value, true);\n                    } else {\n                        svAddChildLogs(loglist, span.data.key, span.data.value);\n                        loglist.sort(function (a, b) {\n                            if (a.th === b.th) {\n                                return a.tl - b.tl;\n                            } else {\n                                return a.th - b.th;\n                            }\n                        });\n                    }\n\n                    var lines = [];\n                    for (var j = 0; j < loglist.length; j++) {\n                        var logLine = loglist[j].b.toLowerCase();\n                        var col;\n\n                        //\n                        // Determine the log text color\n                        //\n                        if (logLine.indexOf(\"err\") > -1) {\n                            col = '#ff0000';\n                        } else if (logLine.indexOf(\"warn\") > -1) {\n                            col = '#ff8800';\n                        } else {\n                            col = '#000000';\n                        }\n\n                        //\n                        // Determine the container color\n                        //\n                        var containerName = loglist[j].d.cont;\n\n                        var contCol = colorStore.assignColor(containerName);\n\n                        lines[j] = {\n                            contCol: contCol,\n                            containerName: containerName,\n                            col: col,\n                            k: loglist[j].k,\n                            t: loglist[j].t,\n                            b: loglist[j].b\n                        };\n                    }\n\n                    resolve(lines);\n                });\n            });\n        }\n    });\n\n    function createSubTree(fullTree, trName) {\n        var res = {};\n        res[\"\"] = {};\n        res[\"\"].ch = {};\n        res[\"\"].ch[trName] = fullTree[\"\"].ch[trName];\n\n        return res;\n    }\n\n    function svFillData(tree) {\n        var key, rem;\n\n        for (key in tree) {\n            svFillData(tree[key].ch);\n\n            rem = tree[key].t;\n            if (rem > 0) {\n                tree[key].ch[''] = {\n                    'svSynthetic': true,\n                    't': rem,\n                    'svTotal': rem,\n                    'ch': {}\n                };\n            }\n        }\n\n        return tree;\n    }\n\n});","define('flame-ui/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 1,\n            \"column\": 38\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"app-container\",[],[\"transactions\",[\"subexpr\",\"@mut\",[[\"get\",\"model\",[\"loc\",[null,[1,31],[1,36]]]]],[],[]]],[\"loc\",[null,[1,0],[1,38]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/app-container', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 20,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 28,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/app-container.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n            return morphs;\n          },\n          statements: [\n            [\"inline\",\"span-log\",[],[\"span\",[\"subexpr\",\"@mut\",[[\"get\",\"span\",[\"loc\",[null,[22,26],[22,30]]]]],[],[]],\"spanMode\",[\"subexpr\",\"@mut\",[[\"get\",\"spanMode\",[\"loc\",[null,[23,26],[23,34]]]]],[],[]],\"log\",[\"subexpr\",\"@mut\",[[\"get\",\"spanLog\",[\"loc\",[null,[24,26],[24,33]]]]],[],[]],\"selectMode\",\"selectSpanMode\",\"class\",\"row-1\"],[\"loc\",[null,[21,8],[27,10]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 10,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/app-container.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          morphs[1] = dom.createMorphAt(fragment,3,3,contextualElement);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"flame-ui\",[],[\"node\",[\"subexpr\",\"@mut\",[[\"get\",\"transaction\",[\"loc\",[null,[12,18],[12,29]]]]],[],[]],\"op\",[\"subexpr\",\"@mut\",[[\"get\",\"aggregation\",[\"loc\",[null,[13,18],[13,29]]]]],[],[]],\"data\",[\"subexpr\",\"@mut\",[[\"get\",\"transactionData\",[\"loc\",[null,[14,18],[14,33]]]]],[],[]],\"select\",\"selectSpan\",\"class\",[\"subexpr\",\"@mut\",[[\"get\",\"chartPanelSize\",[\"loc\",[null,[16,18],[16,32]]]]],[],[]],\"changeAggregation\",\"changeAggregation\"],[\"loc\",[null,[11,4],[18,6]]]],\n          [\"block\",\"if\",[[\"get\",\"span\",[\"loc\",[null,[20,10],[20,14]]]]],[],0,null,[\"loc\",[null,[20,4],[28,11]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\",\n            \"multiple-nodes\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 30,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/app-container.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"sd-header\",[],[\"class\",\"-fixed\"],[\"loc\",[null,[1,0],[1,28]]]],\n        [\"inline\",\"transactions-table\",[],[\"transactions\",[\"subexpr\",\"@mut\",[[\"get\",\"transactions\",[\"loc\",[null,[4,19],[4,31]]]]],[],[]],\"selected\",[\"subexpr\",\"@mut\",[[\"get\",\"transaction\",[\"loc\",[null,[5,19],[5,30]]]]],[],[]],\"select\",\"selectTransaction\",\"class\",\"row-1\"],[\"loc\",[null,[3,0],[8,2]]]],\n        [\"block\",\"if\",[[\"get\",\"transaction\",[\"loc\",[null,[10,6],[10,17]]]]],[],0,null,[\"loc\",[null,[10,0],[29,7]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/flame-ui', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              meta: {\n                \"fragmentReason\": false,\n                \"revision\": \"Ember@2.2.0-beta.1\",\n                \"loc\": {\n                  \"source\": null,\n                  \"start\": {\n                    \"line\": 11,\n                    \"column\": 20\n                  },\n                  \"end\": {\n                    \"line\": 13,\n                    \"column\": 20\n                  }\n                },\n                \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n              },\n              isEmpty: false,\n              arity: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"button\");\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var element2 = dom.childAt(fragment, [1]);\n                var morphs = new Array(2);\n                morphs[0] = dom.createElementMorph(element2);\n                morphs[1] = dom.createMorphAt(element2,0,0);\n                return morphs;\n              },\n              statements: [\n                [\"element\",\"action\",[\"changeAggregation\",[\"get\",\"option.value\",[\"loc\",[null,[12,61],[12,73]]]]],[],[\"loc\",[null,[12,32],[12,75]]]],\n                [\"content\",\"option.name\",[\"loc\",[null,[12,76],[12,91]]]]\n              ],\n              locals: [],\n              templates: []\n            };\n          }());\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 10,\n                  \"column\": 16\n                },\n                \"end\": {\n                  \"line\": 14,\n                  \"column\": 16\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n            },\n            isEmpty: false,\n            arity: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [\n              [\"block\",\"sd-tab-item\",[],[\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"option.value\",[\"loc\",[null,[11,41],[11,53]]]]],[],[]],\"activeTab\",[\"subexpr\",\"@mut\",[[\"get\",\"list.activeTab\",[\"loc\",[null,[11,64],[11,78]]]]],[],[]],\"activateTab\",\"activateTab\",\"registerTab\",\"registerTab\",\"targetObject\",[\"subexpr\",\"@mut\",[[\"get\",\"list\",[\"loc\",[null,[11,144],[11,148]]]]],[],[]]],0,null,[\"loc\",[null,[11,20],[13,36]]]]\n            ],\n            locals: [\"option\"],\n            templates: [child0]\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 9,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 15,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"each\",[[\"get\",\"aggregationOptions\",[\"loc\",[null,[10,24],[10,42]]]]],[],0,null,[\"loc\",[null,[10,16],[14,25]]]]\n          ],\n          locals: [\"list\"],\n          templates: [child0]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 17,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h1\");\n          dom.setAttribute(el1,\"class\",\"title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"spacer\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"text\");\n          var el2 = dom.createTextNode(\"\\n            Aggregate by\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [5]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"node\",[\"loc\",[null,[3,26],[3,34]]]],\n          [\"block\",\"sd-tabs-list\",[],[\"activeTab\",[\"subexpr\",\"@mut\",[[\"get\",\"op\",[\"loc\",[null,[9,38],[9,40]]]]],[],[]]],0,null,[\"loc\",[null,[9,12],[15,29]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 20,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 25,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"id\",\"chart\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"style\",\"position: relative\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"id\",\"svPopout\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 35,\n                  \"column\": 24\n                },\n                \"end\": {\n                  \"line\": 40,\n                  \"column\": 24\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n            },\n            isEmpty: false,\n            arity: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"tr\");\n              dom.setAttribute(el1,\"class\",\"tr -no-border\");\n              var el2 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -icon\");\n              var el3 = dom.createElement(\"i\");\n              dom.setAttribute(el3,\"class\",\"material-icons\");\n              var el4 = dom.createTextNode(\"lens\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -string\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element0 = dom.childAt(fragment, [1]);\n              var element1 = dom.childAt(element0, [1, 0]);\n              var morphs = new Array(3);\n              morphs[0] = dom.createAttrMorph(element0, 'style');\n              morphs[1] = dom.createAttrMorph(element1, 'style');\n              morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n              return morphs;\n            },\n            statements: [\n              [\"attribute\",\"style\",[\"get\",\"line.color\",[\"loc\",[null,[36,62],[36,72]]]]],\n              [\"attribute\",\"style\",[\"get\",\"item.color\",[\"loc\",[null,[37,87],[37,97]]]]],\n              [\"content\",\"item.name\",[\"loc\",[null,[38,55],[38,68]]]]\n            ],\n            locals: [\"item\"],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 28,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 43,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"table\");\n            dom.setAttribute(el1,\"class\",\"table\");\n            var el2 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"thead\");\n            dom.setAttribute(el2,\"class\",\"thead\");\n            var el3 = dom.createTextNode(\"\\n                        \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"th\");\n            dom.setAttribute(el3,\"class\",\"th -icon\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                        \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"th\");\n            dom.setAttribute(el3,\"class\",\"th -string\");\n            var el4 = dom.createTextNode(\"Containers\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"tbody\");\n            dom.setAttribute(el2,\"class\",\"tbody -compact\");\n            var el3 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"                    \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3]),1,1);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"each\",[[\"get\",\"legendItems\",[\"loc\",[null,[35,32],[35,43]]]]],[],0,null,[\"loc\",[null,[35,24],[40,33]]]]\n          ],\n          locals: [],\n          templates: [child0]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 27,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 44,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sd-table\",[],[],0,null,[\"loc\",[null,[28,12],[43,25]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    var child3 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 55,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 58,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"br\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"strong\");\n              var el2 = dom.createTextNode(\"NOTE: this node has \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\" childs. Only the slowest one is shown.\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n              return morphs;\n            },\n            statements: [\n              [\"content\",\"activeSpan.childCount\",[\"loc\",[null,[57,44],[57,69]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 48,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 59,\n                \"column\": 8\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"strong\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\" –\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            Container:                      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"b\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            Command Line:                   \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"b\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            Time in this node and childs:   \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"b\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            Time in this node:              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"b\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(6);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            morphs[2] = dom.createMorphAt(dom.childAt(fragment, [5]),0,0);\n            morphs[3] = dom.createMorphAt(dom.childAt(fragment, [7]),0,0);\n            morphs[4] = dom.createMorphAt(dom.childAt(fragment, [9]),0,0);\n            morphs[5] = dom.createMorphAt(fragment,11,11,contextualElement);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"activeSpan.name\",[\"loc\",[null,[49,20],[49,39]]]],\n            [\"content\",\"activeSpan.container\",[\"loc\",[null,[50,47],[50,71]]]],\n            [\"content\",\"activeSpan.container\",[\"loc\",[null,[51,47],[51,71]]]],\n            [\"content\",\"activeSpan.container\",[\"loc\",[null,[52,47],[52,71]]]],\n            [\"content\",\"activeSpan.timeInNode\",[\"loc\",[null,[53,47],[53,72]]]],\n            [\"block\",\"if\",[[\"get\",\"activeSpan.childCount\",[\"loc\",[null,[55,18],[55,39]]]]],[],0,null,[\"loc\",[null,[55,12],[58,19]]]]\n          ],\n          locals: [],\n          templates: [child0]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 47,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 60,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"activeSpan\",[\"loc\",[null,[48,14],[48,24]]]]],[],0,null,[\"loc\",[null,[48,8],[59,15]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"triple-curlies\"\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 62,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/flame-ui.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"flex-scaffholding -column\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"flex-scaffholding -row flex-grow\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element3 = dom.childAt(fragment, [0]);\n        var element4 = dom.childAt(element3, [3]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(element3,1,1);\n        morphs[1] = dom.createMorphAt(element4,1,1);\n        morphs[2] = dom.createMorphAt(element4,3,3);\n        morphs[3] = dom.createMorphAt(element3,5,5);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sd-panel-header\",[],[],0,null,[\"loc\",[null,[2,4],[17,24]]]],\n        [\"block\",\"sd-panel-content\",[],[\"class\",\"flex-grow -overflow-visible -flexbox\"],1,null,[\"loc\",[null,[20,8],[25,29]]]],\n        [\"block\",\"sd-panel-sidebar\",[],[],2,null,[\"loc\",[null,[27,8],[44,29]]]],\n        [\"block\",\"sd-panel-footer\",[],[],3,null,[\"loc\",[null,[47,4],[60,24]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/input-toggle', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\",\n            \"multiple-nodes\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 3,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/input-toggle.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createElementMorph(element0);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"input\",[],[\"type\",\"checkbox\",\"name\",[\"subexpr\",\"@mut\",[[\"get\",\"name\",[\"loc\",[null,[1,29],[1,33]]]]],[],[]],\"checked\",[\"subexpr\",\"@mut\",[[\"get\",\"checked\",[\"loc\",[null,[1,42],[1,49]]]]],[],[]],\"disabled\",[\"subexpr\",\"@mut\",[[\"get\",\"disabled\",[\"loc\",[null,[1,59],[1,67]]]]],[],[]],\"readonly\",[\"subexpr\",\"@mut\",[[\"get\",\"readonly\",[\"loc\",[null,[1,77],[1,85]]]]],[],[]]],[\"loc\",[null,[1,0],[1,87]]]],\n        [\"element\",\"action\",[\"toggle\"],[],[\"loc\",[null,[2,6],[2,25]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/s-panel-sidebar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/s-panel-sidebar.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-dropdown-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": {\n            \"name\": \"missing-wrapper\",\n            \"problems\": [\n              \"wrong-type\"\n            ]\n          },\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 3,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/sd-dropdown-item.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"yield\",[\"loc\",[null,[2,4],[2,13]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 4,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 6,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/sd-dropdown-item.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"#0\");\n            dom.setAttribute(el1,\"class\",\"item -selected\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element1 = dom.childAt(fragment, [1]);\n            var morphs = new Array(2);\n            morphs[0] = dom.createElementMorph(element1);\n            morphs[1] = dom.createMorphAt(element1,0,0);\n            return morphs;\n          },\n          statements: [\n            [\"element\",\"action\",[\"setDropdownStatus\",false],[],[\"loc\",[null,[5,44],[5,80]]]],\n            [\"content\",\"item.name\",[\"loc\",[null,[5,81],[5,94]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 6,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 8,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/sd-dropdown-item.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"#0\");\n            dom.setAttribute(el1,\"class\",\"item\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element0 = dom.childAt(fragment, [1]);\n            var morphs = new Array(2);\n            morphs[0] = dom.createElementMorph(element0);\n            morphs[1] = dom.createMorphAt(element0,0,0);\n            return morphs;\n          },\n          statements: [\n            [\"element\",\"action\",[\"selectOption\",[\"get\",\"item.value\",[\"loc\",[null,[7,58],[7,68]]]]],[],[\"loc\",[null,[7,34],[7,70]]]],\n            [\"content\",\"item.name\",[\"loc\",[null,[7,71],[7,84]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 9,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/sd-dropdown-item.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"isSelected\",[\"loc\",[null,[4,10],[4,20]]]]],[],0,1,[\"loc\",[null,[4,4],[8,11]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 10,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-dropdown-item.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"hasBlock\",[\"loc\",[null,[1,6],[1,14]]]]],[],0,1,[\"loc\",[null,[1,0],[9,7]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-dropdown-trigger', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-dropdown-trigger.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": {\n            \"name\": \"missing-wrapper\",\n            \"problems\": [\n              \"wrong-type\"\n            ]\n          },\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 7,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/sd-dropdown.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"label\",[\"loc\",[null,[6,4],[6,13]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 18,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/sd-dropdown.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);\n          return morphs;\n        },\n        statements: [\n          [\"inline\",\"sd-dropdown-item\",[],[\"item\",[\"subexpr\",\"@mut\",[[\"get\",\"item\",[\"loc\",[null,[13,36],[13,40]]]]],[],[]],\"selectedOption\",[\"subexpr\",\"@mut\",[[\"get\",\"selectedOption\",[\"loc\",[null,[14,36],[14,50]]]]],[],[]],\"selectOption\",\"selectOption\",\"setDropdownStatus\",\"setDropdownStatus\"],[\"loc\",[null,[12,12],[17,10]]]]\n        ],\n        locals: [\"item\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\",\n            \"multiple-nodes\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 21,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-dropdown.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"sd-dropdown\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"list\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sd-dropdown-trigger\",[],[\"class\",[\"subexpr\",\"@mut\",[[\"get\",\"buttonClasses\",[\"loc\",[null,[2,22],[2,35]]]]],[],[]],\"toggleDropdown\",\"toggleDropdown\",\"setupHeight\",\"setupHeight\"],0,null,[\"loc\",[null,[1,0],[7,24]]]],\n        [\"block\",\"each\",[[\"get\",\"items\",[\"loc\",[null,[11,16],[11,21]]]]],[],1,null,[\"loc\",[null,[11,8],[18,17]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-header', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 4,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/sd-header.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"img\");\n          dom.setAttribute(el1,\"src\",\"sysdig_white.svg\");\n          dom.setAttribute(el1,\"onerror\",\"this.src = 'sysdig_white.png'\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"multiple-nodes\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 10,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-header.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navigator -align-left\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"separator\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navigator -align-right\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"#\");\n        dom.setAttribute(el2,\"class\",\"item\");\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"material-icons\");\n        var el4 = dom.createTextNode(\"help\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"index\"],[\"class\",\"logo\"],0,null,[\"loc\",[null,[2,4],[4,16]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-panel-content', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-panel-content.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-panel-footer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-panel-footer.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-panel-header', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-panel-header.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-panel', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-panel.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-tab-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-tab-item.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"yield\",[\"loc\",[null,[1,0],[1,9]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": false,\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-table.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"table\");\n        dom.setAttribute(el2,\"class\",\"table\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createAttrMorph(element0, 'class');\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"attribute\",\"class\",[\"subexpr\",\"if\",[[\"get\",\"hasStickHeader\",[\"loc\",[null,[1,16],[1,30]]]],\"sd-table-inner\"],[],[\"loc\",[null,[1,11],[1,49]]]]],\n        [\"content\",\"yield\",[\"loc\",[null,[3,8],[3,17]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/sd-tabs-list', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/sd-tabs-list.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"yield\",[[\"get\",\"this\",[\"loc\",[null,[1,8],[1,12]]]]],[],[\"loc\",[null,[1,0],[1,14]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('flame-ui/templates/components/span-log', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 6,\n                  \"column\": 16\n                },\n                \"end\": {\n                  \"line\": 8,\n                  \"column\": 16\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"button\");\n              var el2 = dom.createTextNode(\"this span only\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element3 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element3);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"selectMode\",\"SPAN\"],[],[\"loc\",[null,[7,28],[7,58]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        var child1 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 9,\n                  \"column\": 16\n                },\n                \"end\": {\n                  \"line\": 11,\n                  \"column\": 16\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"button\");\n              var el2 = dom.createTextNode(\"this span and children\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element2 = dom.childAt(fragment, [1]);\n              var morphs = new Array(1);\n              morphs[0] = dom.createElementMorph(element2);\n              return morphs;\n            },\n            statements: [\n              [\"element\",\"action\",[\"selectMode\",\"SPAN_CHILD\"],[],[\"loc\",[null,[10,28],[10,64]]]]\n            ],\n            locals: [],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 5,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 12,\n                \"column\": 12\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(2);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            morphs[1] = dom.createMorphAt(fragment,1,1,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"sd-tab-item\",[],[\"value\",\"1\",\"activeTab\",[\"subexpr\",\"@mut\",[[\"get\",\"list.activeTab\",[\"loc\",[null,[6,51],[6,65]]]]],[],[]],\"activateTab\",\"activateTab\",\"registerTab\",\"registerTab\",\"targetObject\",[\"subexpr\",\"@mut\",[[\"get\",\"list\",[\"loc\",[null,[6,131],[6,135]]]]],[],[]]],0,null,[\"loc\",[null,[6,16],[8,32]]]],\n            [\"block\",\"sd-tab-item\",[],[\"value\",\"2\",\"activeTab\",[\"subexpr\",\"@mut\",[[\"get\",\"list.activeTab\",[\"loc\",[null,[9,51],[9,65]]]]],[],[]],\"activateTab\",\"activateTab\",\"registerTab\",\"registerTab\",\"targetObject\",[\"subexpr\",\"@mut\",[[\"get\",\"list\",[\"loc\",[null,[9,131],[9,135]]]]],[],[]]],1,null,[\"loc\",[null,[9,16],[11,32]]]]\n          ],\n          locals: [\"list\"],\n          templates: [child0, child1]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 2,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 14,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"text\");\n          var el2 = dom.createTextNode(\"\\n            Logs for\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sd-tabs-list\",[],[],0,null,[\"loc\",[null,[5,12],[12,29]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 34,\n                  \"column\": 16\n                },\n                \"end\": {\n                  \"line\": 42,\n                  \"column\": 16\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n            },\n            isEmpty: false,\n            arity: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"tr\");\n              dom.setAttribute(el1,\"class\",\"tr\");\n              var el2 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -icon\");\n              var el3 = dom.createElement(\"i\");\n              dom.setAttribute(el3,\"class\",\"material-icons\");\n              var el4 = dom.createTextNode(\"lens\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -string\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -string\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -number\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -string\");\n              dom.setAttribute(el2,\"colspan\",\"3\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element0 = dom.childAt(fragment, [1]);\n              var element1 = dom.childAt(element0, [1, 0]);\n              var morphs = new Array(6);\n              morphs[0] = dom.createAttrMorph(element0, 'style');\n              morphs[1] = dom.createAttrMorph(element1, 'style');\n              morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n              morphs[3] = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n              morphs[4] = dom.createMorphAt(dom.childAt(element0, [7]),0,0);\n              morphs[5] = dom.createMorphAt(dom.childAt(element0, [9]),0,0);\n              return morphs;\n            },\n            statements: [\n              [\"attribute\",\"style\",[\"get\",\"line.color\",[\"loc\",[null,[35,43],[35,53]]]]],\n              [\"attribute\",\"style\",[\"get\",\"line.lineColor\",[\"loc\",[null,[36,79],[36,93]]]]],\n              [\"content\",\"line.containerName\",[\"loc\",[null,[37,47],[37,69]]]],\n              [\"content\",\"line.k\",[\"loc\",[null,[38,47],[38,57]]]],\n              [\"content\",\"line.t\",[\"loc\",[null,[39,47],[39,57]]]],\n              [\"content\",\"line.b\",[\"loc\",[null,[40,59],[40,69]]]]\n            ],\n            locals: [\"line\"],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 17,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 44,\n                \"column\": 8\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"thead\");\n            dom.setAttribute(el1,\"class\",\"thead\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -icon\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -string\");\n            var el3 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Container\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -string\");\n            var el3 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"K\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                        \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -number\");\n            var el3 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Date and Time\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -string\");\n            dom.setAttribute(el2,\"colspan\",\"3\");\n            var el3 = dom.createTextNode(\"\\n                    \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Message\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"tbody\");\n            dom.setAttribute(el1,\"class\",\"tbody -compact\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"            \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"each\",[[\"get\",\"lines\",[\"loc\",[null,[34,24],[34,29]]]]],[\"key\",\"@index\"],0,null,[\"loc\",[null,[34,16],[42,25]]]]\n          ],\n          locals: [],\n          templates: [child0]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 16,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 45,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sd-table\",[],[\"sticky\",true],0,null,[\"loc\",[null,[17,8],[44,21]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"triple-curlies\"\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 47,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/span-log.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"flex-scaffholding -column\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element4 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element4,1,1);\n        morphs[1] = dom.createMorphAt(element4,3,3);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sd-panel-header\",[],[],0,null,[\"loc\",[null,[2,4],[14,24]]]],\n        [\"block\",\"sd-panel-content\",[],[\"class\",\"flex-grow -no-padding -flexbox\"],1,null,[\"loc\",[null,[16,4],[45,25]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('flame-ui/templates/components/transactions-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"fragmentReason\": {\n            \"name\": \"triple-curlies\"\n          },\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 3,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/transactions-table.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h1\");\n          dom.setAttribute(el1,\"class\",\"title\");\n          var el2 = dom.createTextNode(\"Transactions\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            meta: {\n              \"fragmentReason\": false,\n              \"revision\": \"Ember@2.2.0-beta.1\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 25,\n                  \"column\": 12\n                },\n                \"end\": {\n                  \"line\": 33,\n                  \"column\": 12\n                }\n              },\n              \"moduleName\": \"flame-ui/templates/components/transactions-table.hbs\"\n            },\n            isEmpty: false,\n            arity: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"tr\");\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -string\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -number\");\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\" calls\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -number\");\n              var el3 = dom.createElement(\"a\");\n              dom.setAttribute(el3,\"href\",\"#0\");\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -number\");\n              var el3 = dom.createElement(\"a\");\n              dom.setAttribute(el3,\"href\",\"#0\");\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"td\");\n              dom.setAttribute(el2,\"class\",\"td -number\");\n              var el3 = dom.createElement(\"a\");\n              dom.setAttribute(el3,\"href\",\"#0\");\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var element0 = dom.childAt(fragment, [1]);\n              var element1 = dom.childAt(element0, [5, 0]);\n              var element2 = dom.childAt(element0, [7, 0]);\n              var element3 = dom.childAt(element0, [9, 0]);\n              var morphs = new Array(10);\n              morphs[0] = dom.createAttrMorph(element0, 'class');\n              morphs[1] = dom.createElementMorph(element0);\n              morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n              morphs[3] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n              morphs[4] = dom.createElementMorph(element1);\n              morphs[5] = dom.createMorphAt(element1,0,0);\n              morphs[6] = dom.createElementMorph(element2);\n              morphs[7] = dom.createMorphAt(element2,0,0);\n              morphs[8] = dom.createElementMorph(element3);\n              morphs[9] = dom.createMorphAt(element3,0,0);\n              return morphs;\n            },\n            statements: [\n              [\"attribute\",\"class\",[\"concat\",[\"tr -link \",[\"subexpr\",\"if\",[[\"subexpr\",\"is-equal\",[],[\"a\",[\"get\",\"transaction.node\",[\"loc\",[null,[26,53],[26,69]]]],\"b\",[\"get\",\"selected\",[\"loc\",[null,[26,72],[26,80]]]]],[\"loc\",[null,[26,41],[26,81]]]],\"-selected\"],[],[\"loc\",[null,[26,36],[26,95]]]]]]],\n              [\"element\",\"action\",[\"select\",[\"get\",\"transaction.node\",[\"loc\",[null,[26,115],[26,131]]]]],[],[\"loc\",[null,[26,97],[26,133]]]],\n              [\"content\",\"transaction.node\",[\"loc\",[null,[27,43],[27,63]]]],\n              [\"content\",\"transaction.n\",[\"loc\",[null,[28,43],[28,60]]]],\n              [\"element\",\"action\",[\"select\",[\"get\",\"transaction.node\",[\"loc\",[null,[29,74],[29,90]]]],\"avg\"],[\"bubbles\",false],[\"loc\",[null,[29,56],[29,112]]]],\n              [\"content\",\"transaction.avg\",[\"loc\",[null,[29,113],[29,132]]]],\n              [\"element\",\"action\",[\"select\",[\"get\",\"transaction.node\",[\"loc\",[null,[30,74],[30,90]]]],\"min\"],[\"bubbles\",false],[\"loc\",[null,[30,56],[30,112]]]],\n              [\"content\",\"transaction.min\",[\"loc\",[null,[30,113],[30,132]]]],\n              [\"element\",\"action\",[\"select\",[\"get\",\"transaction.node\",[\"loc\",[null,[31,74],[31,90]]]],\"max\"],[\"bubbles\",false],[\"loc\",[null,[31,56],[31,112]]]],\n              [\"content\",\"transaction.max\",[\"loc\",[null,[31,113],[31,132]]]]\n            ],\n            locals: [\"transaction\"],\n            templates: []\n          };\n        }());\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.2.0-beta.1\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 6,\n                \"column\": 4\n              },\n              \"end\": {\n                \"line\": 35,\n                \"column\": 4\n              }\n            },\n            \"moduleName\": \"flame-ui/templates/components/transactions-table.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"thead\");\n            dom.setAttribute(el1,\"class\",\"thead\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -string\");\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Node\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -number\");\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Calls\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -number\");\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Avg Time\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -number\");\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Min Time\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"th\");\n            dom.setAttribute(el2,\"class\",\"th -number\");\n            var el3 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"div\");\n            dom.setAttribute(el3,\"class\",\"th-inner\");\n            var el4 = dom.createTextNode(\"Max Time\");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"tbody\");\n            dom.setAttribute(el1,\"class\",\"tbody\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            return morphs;\n          },\n          statements: [\n            [\"block\",\"each\",[[\"get\",\"transactions\",[\"loc\",[null,[25,20],[25,32]]]]],[],0,null,[\"loc\",[null,[25,12],[33,21]]]]\n          ],\n          locals: [],\n          templates: [child0]\n        };\n      }());\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.2.0-beta.1\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 5,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 36,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"flame-ui/templates/components/transactions-table.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"sd-table\",[],[\"sticky\",true],0,null,[\"loc\",[null,[6,4],[35,17]]]]\n        ],\n        locals: [],\n        templates: [child0]\n      };\n    }());\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\n            \"wrong-type\",\n            \"multiple-nodes\"\n          ]\n        },\n        \"revision\": \"Ember@2.2.0-beta.1\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 37,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"flame-ui/templates/components/transactions-table.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"sd-panel-header\",[],[],0,null,[\"loc\",[null,[1,0],[3,20]]]],\n        [\"block\",\"sd-panel-content\",[],[\"class\",\"-no-padding -flexbox\"],1,null,[\"loc\",[null,[5,0],[36,21]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('flame-ui/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/app-container.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/app-container.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/app-container.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/flame-ui.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/flame-ui.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/flame-ui.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/input-toggle.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/input-toggle.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-toggle.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-dropdown-item.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-dropdown-item.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-dropdown-item.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-dropdown-trigger.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-dropdown-trigger.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-dropdown-trigger.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-dropdown.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-dropdown.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-dropdown.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-header.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-header.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-header.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-panel-content.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-panel-content.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-panel-content.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-panel-footer.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-panel-footer.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-panel-footer.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-panel-header.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-panel-header.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-panel-header.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-panel-sidebar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-panel-sidebar.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-panel-sidebar.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-panel.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-panel.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-panel.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-tab-item.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-tab-item.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-tab-item.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-table.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-table.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-table.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/sd-tabs-list.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/sd-tabs-list.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sd-tabs-list.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/span-log.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/span-log.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/span-log.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/components/transactions-table.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components/transactions-table.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/transactions-table.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/helpers/fmt-time-interval.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/fmt-time-interval.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/fmt-time-interval.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/helpers/fmtTimeInterval.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/fmtTimeInterval.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/fmtTimeInterval.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/helpers/is-equal.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/is-equal.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/is-equal.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/helpers/resolver', ['exports', 'ember/resolver', 'flame-ui/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('flame-ui/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/helpers/start-app', ['exports', 'ember', 'flame-ui/app', 'flame-ui/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('flame-ui/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/input-toggle-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('input-toggle', 'Integration | Component | input toggle', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'input-toggle', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'input-toggle', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/input-toggle-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/input-toggle-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-toggle-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-dropdown-item', 'Integration | Component | sd dropdown item', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-dropdown-item', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-dropdown-item', [], [], 0, null, ['loc', [null, [2, 4], [4, 25]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-item-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-dropdown-item-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-dropdown-item-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-dropdown', 'Integration | Component | sd dropdown', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 15\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-dropdown', ['loc', [null, [1, 0], [1, 15]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-dropdown', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-dropdown-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-dropdown-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-trigger-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-dropdown-trigger', 'Integration | Component | sd dropdown trigger', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 23\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-dropdown-trigger', ['loc', [null, [1, 0], [1, 23]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-dropdown-trigger', [], [], 0, null, ['loc', [null, [2, 4], [4, 28]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-dropdown-trigger-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-dropdown-trigger-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-dropdown-trigger-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-header-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-header', 'Integration | Component | sd header', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 13\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-header', ['loc', [null, [1, 0], [1, 13]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-header', [], [], 0, null, ['loc', [null, [2, 4], [4, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-header-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-header-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-header-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-content-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-panel-content', 'Integration | Component | sd panel content', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-panel-content', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-panel-content', [], [], 0, null, ['loc', [null, [2, 4], [4, 25]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-content-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-panel-content-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-panel-content-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-footer-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-panel-footer', 'Integration | Component | s panel footer', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 19\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-panel-footer', ['loc', [null, [1, 0], [1, 19]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-panel-footer', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-footer-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-panel-footer-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-panel-footer-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-header-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-panel-header', 'Integration | Component | s panel header', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 19\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-panel-header', ['loc', [null, [1, 0], [1, 19]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-panel-header', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-header-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-panel-header-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-panel-header-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-sidebar-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-panel-sidebar', 'Integration | Component | s panel sidebar', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-panel-sidebar', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-panel-sidebar', [], [], 0, null, ['loc', [null, [2, 4], [4, 25]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-sidebar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-panel-sidebar-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-panel-sidebar-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-panel', 'Integration | Component | s panel', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 12\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-panel', ['loc', [null, [1, 0], [1, 12]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-panel', [], [], 0, null, ['loc', [null, [2, 4], [4, 17]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-panel-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-panel-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-panel-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-tab-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-tab-item', 'Integration | Component | sd tab item', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 15\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-tab-item', ['loc', [null, [1, 0], [1, 15]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-tab-item', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-tab-item-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-tab-item-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-tab-item-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-table-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-table', 'Integration | Component | sd table', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 12\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-table', ['loc', [null, [1, 0], [1, 12]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-table', [], [], 0, null, ['loc', [null, [2, 4], [4, 17]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-table-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-table-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-table-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-tabs-list-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sd-tabs-list', 'Integration | Component | sd tabs list', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'sd-tabs-list', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.2.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.2.0-beta.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'sd-tabs-list', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('flame-ui/tests/integration/components/sd-tabs-list-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/sd-tabs-list-test.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sd-tabs-list-test.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/lib/flame-graph.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - lib/flame-graph.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'lib/flame-graph.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/mixins/clickElseWhere.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - mixins/clickElseWhere.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/clickElseWhere.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/services/color-store.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services/color-store.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/color-store.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/services/transaction-store.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - services/transaction-store.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/transaction-store.js should pass jshint.');\n  });\n\n});","define('flame-ui/tests/test-helper', ['flame-ui/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('flame-ui/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function(assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('flame-ui/config/environment', ['ember'], function(Ember) {\n  var prefix = 'flame-ui';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"flame-ui/tests/test-helper\");\n} else {\n  require(\"flame-ui/app\")[\"default\"].create({\"name\":\"flame-ui\",\"version\":\"0.0.0+39e30d70\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrppPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACppDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/fnrfile":"flame-ui.js"}